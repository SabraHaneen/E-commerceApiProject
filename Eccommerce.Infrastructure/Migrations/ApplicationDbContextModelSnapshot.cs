// <auto-generated />
using System;
using Eccommerce.Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Eccommerce.Infrastructure.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.32")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Eccommerce.Core.Entities.Categories", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Devices",
                            Name = "Electronics"
                        },
                        new
                        {
                            Id = 2,
                            Description = "Books,and novels",
                            Name = "Books"
                        },
                        new
                        {
                            Id = 3,
                            Description = "apparel and accessories",
                            Name = "Clothing"
                        },
                        new
                        {
                            Id = 4,
                            Description = "apparel and accessories",
                            Name = "Home"
                        });
                });

            modelBuilder.Entity("Eccommerce.Core.Entities.OrderDetailes", b =>
                {
                    b.Property<int>("OrdersId")
                        .HasColumnType("int");

                    b.Property<int>("ProductsId")
                        .HasColumnType("int");

                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<int>("Price")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("OrdersId", "ProductsId");

                    b.HasIndex("ProductsId");

                    b.ToTable("OrderDetailes");

                    b.HasData(
                        new
                        {
                            OrdersId = 1,
                            ProductsId = 1,
                            Id = 1,
                            Price = 345,
                            Quantity = 3
                        },
                        new
                        {
                            OrdersId = 2,
                            ProductsId = 3,
                            Id = 2,
                            Price = 245,
                            Quantity = 2
                        });
                });

            modelBuilder.Entity("Eccommerce.Core.Entities.Orders", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("OrderDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("OrderStatus")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UsersId")
                        .HasColumnType("int");

                    b.Property<int>("amount")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UsersId");

                    b.ToTable("Orders");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            OrderDate = new DateTime(2024, 7, 13, 1, 6, 8, 301, DateTimeKind.Local).AddTicks(6046),
                            OrderStatus = "pending",
                            UsersId = 1,
                            amount = 19
                        },
                        new
                        {
                            Id = 2,
                            OrderDate = new DateTime(2024, 7, 13, 1, 6, 8, 301, DateTimeKind.Local).AddTicks(6086),
                            OrderStatus = "pending",
                            UsersId = 2,
                            amount = 19
                        });
                });

            modelBuilder.Entity("Eccommerce.Core.Entities.Products", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("CategoriesId")
                        .HasColumnType("int");

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Price")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CategoriesId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoriesId = 1,
                            Name = "smartphone",
                            Price = 400
                        },
                        new
                        {
                            Id = 2,
                            CategoriesId = 1,
                            Name = "laptops",
                            Price = 2500
                        },
                        new
                        {
                            Id = 3,
                            CategoriesId = 3,
                            Name = "short",
                            Price = 100
                        },
                        new
                        {
                            Id = 4,
                            CategoriesId = 1,
                            Name = "smartphone",
                            Price = 400
                        },
                        new
                        {
                            Id = 5,
                            CategoriesId = 2,
                            Name = "davince code",
                            Price = 400
                        });
                });

            modelBuilder.Entity("Eccommerce.Core.Entities.Users", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "sabrahanien@gmail.com",
                            Password = "12345678",
                            Phone = "0597088628",
                            Role = "user",
                            UserName = "Haneen"
                        },
                        new
                        {
                            Id = 2,
                            Email = "sabrahanien2@gmail.com",
                            Password = "1234567",
                            Phone = "0597088629",
                            Role = "Admin",
                            UserName = "Haneen2"
                        });
                });

            modelBuilder.Entity("Eccommerce.Core.Entities.OrderDetailes", b =>
                {
                    b.HasOne("Eccommerce.Core.Entities.Orders", "Orders")
                        .WithMany("OrderDetailes")
                        .HasForeignKey("OrdersId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Eccommerce.Core.Entities.Products", "Products")
                        .WithMany("OrderDetailes")
                        .HasForeignKey("ProductsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Orders");

                    b.Navigation("Products");
                });

            modelBuilder.Entity("Eccommerce.Core.Entities.Orders", b =>
                {
                    b.HasOne("Eccommerce.Core.Entities.Users", "Users")
                        .WithMany("Orders")
                        .HasForeignKey("UsersId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Users");
                });

            modelBuilder.Entity("Eccommerce.Core.Entities.Products", b =>
                {
                    b.HasOne("Eccommerce.Core.Entities.Categories", "Categories")
                        .WithMany("Products")
                        .HasForeignKey("CategoriesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Categories");
                });

            modelBuilder.Entity("Eccommerce.Core.Entities.Categories", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("Eccommerce.Core.Entities.Orders", b =>
                {
                    b.Navigation("OrderDetailes");
                });

            modelBuilder.Entity("Eccommerce.Core.Entities.Products", b =>
                {
                    b.Navigation("OrderDetailes");
                });

            modelBuilder.Entity("Eccommerce.Core.Entities.Users", b =>
                {
                    b.Navigation("Orders");
                });
#pragma warning restore 612, 618
        }
    }
}
